/*
 *Author:wmm
 *Email:wu.mengemgn@foxmail.com
 *Date:2012-3-24
 */
package cn.sin.news;

import java.io.File;
import java.io.IOException;
import java.net.UnknownHostException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import android.app.Activity;
import android.app.ProgressDialog;
import android.content.DialogInterface;
import android.content.Intent;
import android.graphics.Color;
import android.os.Bundle;
import android.os.Environment;
import android.view.Gravity;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.Window;
import android.widget.AdapterView;
import android.widget.GridView;
import android.widget.ListView;
import android.widget.SimpleAdapter;
import android.widget.TextView;
import android.widget.Toast;
import android.widget.AdapterView.OnItemClickListener;

public class MainAvtivity extends Activity implements OnItemClickListener,HostAddr  {
	GridView  toolbarGrid;
	/*-- Toolbar底部菜单选项下标--*/
	private final int TOOLBAR_ITEM_PAGEHOME = 0;// 学院工作
	private final int TOOLBAR_ITEM_BACK = 1;// 校企合作
	private final int TOOLBAR_ITEM_FORWARD = 2;// 学术交流
	private final int TOOLBAR_ITEM_NEW = 3;// 学生活动
	private final int TOOLBAR_ITEM_MENU = 4;// 校友特刊
	/** 底部菜单图片 **/
	int[] menu_toolbar_image_array = { 
			R.drawable.controlbar_backward_enable,
			R.drawable.controlbar_forward_enable,
			R.drawable.controlbar_window, 
			R.drawable.controlbar_homepage,
			R.drawable.controlbar_showtype_list };
	/** 底部菜单文字 **/
	String[] menu_toolbar_name_array = { "学院工作", "校企合作", "学术交流", "学生活动", "校友特刊" };
	private final static int ITEM0=Menu.FIRST;
  private final static int ITEM1=Menu.FIRST+1;
	
	private ListView list1; //显示标题的list列表声明
	private TextView colorshow;//声明顶部的颜色
	boolean state=false;  
	private String  dirName="cquptscie/";  
	private String mtabId="collage";  //设立标签
	private int color;
	
    	private String[] titlelist={ "Main Title1","Main Title2","Main Title3","Main Title4", };
      public String[] mImageIds = {
				 "http://192.168.0.100:8080/news/a1.jpg", 
				 "http://192.168.0.100:8080/news/a2.jpg", 
				 "http://192.168.0.100:8080/news/a3.jpg", 
				 "http://192.168.0.100:8080/news/a4.jpg", 
				 "http://192.168.0.100:8080/news/a5.jpg", 
				 "http://192.168.0.100:8080/news/a6.jpg",
				 };
    	
    	
	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
	    requestWindowFeature(Window.FEATURE_NO_TITLE);
		setContentView(R.layout.main);
	
		list1=(ListView)this.findViewById(R.id.list1);
		colorshow=(TextView)this.findViewById(R.id.color);
		 
    list1.setOnItemClickListener(this) ; 
         
		// 创建底部菜单 Toolbar
		toolbarGrid = (GridView) findViewById(R.id.GridView_toolbar);
		toolbarGrid.setBackgroundResource(R.drawable.channelgallery_bg);// 设置背景
		toolbarGrid.setNumColumns(5);// 设置每行列数
		
		toolbarGrid.setGravity(Gravity.CENTER);// 位置居中
		toolbarGrid.setVerticalSpacing(10);// 垂直间隔
		toolbarGrid.setHorizontalSpacing(10);// 水平间隔
		toolbarGrid.setAdapter(getMenuAdapter(menu_toolbar_name_array,menu_toolbar_image_array));// 设置菜单Adapter
		
		//更新文章信息
		refresh updataRefreshe=new refresh();
		try {
			
			updataRefreshe.refresh(mtabId); 
				
			} catch (UnknownHostException e) {
				e.printStackTrace();
			} catch (IOException e) {
				e.printStackTrace();
			}
		
		//获取更新标题
		titlelist=updataRefreshe.title();
		reload(mtabId,titlelist);

		/** 监听底部菜单选项 **/
		toolbarGrid.setOnItemClickListener(new OnItemClickListener() {
			public void onItemClick(AdapterView<?> arg0, View arg1, int arg2,
					long arg3) {
				Toast.makeText(MainAvtivity.this,menu_toolbar_name_array[arg2], 
					Toast.LENGTH_SHORT).show();
	
				switch (arg2) {
				
					case TOOLBAR_ITEM_PAGEHOME:
						mtabId="collage";
					  Color=Color.rgb(0, 102, 204);
						break;
						
					case TOOLBAR_ITEM_BACK:
						mtabId="enterprice";	
						color=Color.rgb(255, 0, 0);
						break;
						
					case TOOLBAR_ITEM_FORWARD:;
						mtabId="communication";
						color=Color.rgb(0, 153, 0);
						break;
						
					case TOOLBAR_ITEM_NEW:
						mtabId="student";
						color=Color.rgb(255, 102, 0);
						break;
					
					case TOOLBAR_ITEM_MENU:
						mtabId="schoolmate";
						color=Color.rgb(204, 0, 153);
						break;
				}
		
				updatenews(mtabId,color);
				
			}
		}
		);
		
	}
  //通过标签获取不同分类的的数据
	public void  updatenews(String mtabId , int color )
	{
		refresh updataRefresh=new refresh();
		
		//设置顶部颜色
	    colorshow.setBackgroundColor(color);
	    
		try {
			
			updataRefresh.refresh(mtabId);
			
			} catch (UnknownHostException e) {
				errordeale(); 
			} catch (IOException e) {
				errordeale() ;
			}
		//获取标题列表
		titlelist=updataRefresh.title();
		
		//打印获取的标题到控台
//			for (int i = 0; i < titlelist.length; i++)
//			{
//				System.out.println("pp"+titlelist[i]);
//			}
	
		reload(mtabId,titlelist);	//载入信息
		
	}
	
	
	
	public boolean reload(String tabId,String[] title) {
		List<ImageAndText> dataArray = new ArrayList<ImageAndText>();
		String[] titlename=new String[10];
    	String[] identinum=new String[10];
    	
    //传入的标题格式为：标题名+识别嘛；分离这两部分	
    	int i=0;
    	while(title[i]!="error" && title[i]!=null) 
    	{
    		
    		 int index=title[i].indexOf("&&");
      	     titlename[i]=title[i].substring(0,index);
      	     identinum[i]=title[i].substring(index+2);
//      	   System.out.println("titlename>>>" +titlename[i]);
//      	   System.out.println("identinum>>>>"+ identinum[i]);
      	   ImageAndText test=new ImageAndText(mImageIds[i], titlename[i],identinum[i]);
      	   dataArray.add(test);
      	   i++;
 
	        ImageAndTextListAdapter adapter=new ImageAndTextListAdapter(this, dataArray, list1);
	        list1.setAdapter(adapter);
	        
		}
		  
      return true;
     
	}
	
	//listview的点击处理事件
    public void onItemClick(AdapterView<?> arg0,//The AdapterView where the click happened 
            View v,//The view within the AdapterView that was clicked
            int position,//The position of the view in the adapter
            long id//The row id of the item that was clicked
            ) {
			//在本例中arg2=arg3
		    //HashMap<String, Object> item=(HashMap<String, Object>) arg0.getItemAtPosition(position);
			//显示所选Item的ItemText
    	
    		//获取list集合中的文字图片对象
    	    ImageAndText item=(ImageAndText)arg0.getItemAtPosition(position);
    	    
    	    //获取名字和识别号
			String titlename=(String)item.getText();     //获取名称
			String identinum=(String)item.getidentinum(); 
			
			//	System.out.println("NewsreadActivity"+titlename);
			
			//建立跳转意图
			Intent intent =new Intent();
			
			intent.setClass(MainAvtivity.this, details.class);
			intent.putExtra("category", mtabId);
			intent.putExtra("title", titlename);
			intent.putExtra("identi", identinum);
			
			startActivity(intent); 
			
			}	
    
    
    
//对异常进行处理并提醒用户发生异常的原因
    public void errordeale() {
    	ProgressDialog dialog2=new ProgressDialog(MainAvtivity.this);
			dialog2.setTitle("网络错误");
			dialog2.setMessage("请检查网络");
			dialog2.setButton("确定", new DialogInterface.OnClickListener() {
				@Override
				public void onClick(DialogInterface dialog2, int which) {
					
				}
			});
          dialog2.setButton2("退出", new DialogInterface.OnClickListener() {
				
				@Override
				public void onClick(DialogInterface dialog2, int which) {
					finish();
				}
			});
			dialog2.show();
	}
	
	

	/**
	 * 构造底部菜单Adapter
	 * 
	 * @param menuNameArray
	 *            名称
	 * @param imageResourceArray
	 *            图片
	 * @return SimpleAdapter
	 */
	private SimpleAdapter getMenuAdapter(String[] menuNameArray,
			int[] imageResourceArray) {
		ArrayList<HashMap<String, Object>> data = new ArrayList<HashMap<String, Object>>();
		for (int i = 0; i < menuNameArray.length; i++) {
			HashMap<String, Object> map = new HashMap<String, Object>();
			map.put("itemImage", imageResourceArray[i]);
			map.put("itemText", menuNameArray[i]);
			data.add(map);
		}
		SimpleAdapter simperAdapter = new SimpleAdapter(this, data,
				R.layout.item_menu, new String[] { "itemImage", "itemText" },
				new int[] { R.id.item_image, R.id.item_text });
		return simperAdapter;
	}
	

	//初始化弹出式菜单
		public boolean onCreateOptionsMenu(Menu menu) {
			//第一个参数：组ID 　第二个参数：菜单项ID　第三个参数：顺序号　第四个参数：菜单项上显示的内容
			menu.add(0,ITEM0,0,"更多");
			menu.add(0,ITEM1,0,"退出");
			return true;
		}

	//处理弹出式菜单的点击事件
		public boolean onOptionsItemSelected(MenuItem item) {
			switch (item.getItemId()) {
			
				case ITEM0:
					try {
	
						refresh updataRefresh=new refresh();
						updataRefresh.refresh(mtabId);
						titlelist=updataRefresh.title();
						reload(mtabId,titlelist);
						
						} catch (UnknownHostException e) {
							errordeale();
						} catch (IOException e) {
							errordeale();
						}
					
					break;
					
				case ITEM1:
					//退出
					finish();
					break;
				
			}
			return true;
		}
		

    	//离线获取文件
    	public SimpleAdapter getfiles(String tabId) {
    		//获取路径  
			String key="txt";
			String sdpath= Environment.getExternalStorageDirectory().getPath()+"//"; 
			String rootpath=sdpath+dirName;
			  //判断并创建目录
		        File rootdirfile = new File(rootpath); 
		        if(!rootdirfile.isDirectory())
		        {
		        	rootdirfile.mkdirs();
		        }
		        
		        File picdirfile = new File(rootpath+"picdir/"); 
		        if(!picdirfile.isDirectory())
		        {
		        	picdirfile.mkdirs();
		        }
		        
		    String pathString=sdpath+dirName+tabId+"//"; 
		    
		    File cagodirfile = new File(pathString);
		    
		    if(!cagodirfile.isDirectory())
	        {
		    	cagodirfile.mkdirs();
	        }
		        
			ArrayList<HashMap<String, Object>> filelist =searchFile(key, pathString);
		    SimpleAdapter listadapter = new SimpleAdapter(this, 
					 filelist,//数据来源 
                     R.layout.night_item,//night_item的XML实现
                     //动态数组与ImageItem对应的子项        
                     new String[] {"ItemImage","ItemText"}, 
                     //ImageItem的XML文件里面的一个ImageView,两个TextView ID
                     new int[] {R.id.ItemImage,R.id.ItemText});
					//添加并且显示
			 return listadapter;
		}
    	
      /*
         * searchFile 查找文件并加入到ArrayList 当中去
         *  @String keyword 查找的关键词
         *  @File filepath  查找的目录
         * 
         * */
        private ArrayList<HashMap<String, Object>> searchFile(String keyword,String filepath)
        { 
        	HashMap<String, Object>  rowItem = null;
        	File newfile = new File(filepath);
        	int index = 0;
        	 ArrayList<HashMap<String, Object>> fileList = new ArrayList<HashMap<String, Object>>();
           //判断SD卡是否存在
             if (Environment.getExternalStorageState().equals( Environment.MEDIA_MOUNTED))
             {
              File[] files = newfile.listFiles();
                        for (File file : files)
                        {
                           //判断是文件，则进行文件名判断
                                    try {   
		                                     if (file.getName().indexOf(keyword) > -1||file.getName().indexOf(keyword.toUpperCase()) > -1) 
		                                     {   
			                                    	
			                                     		   rowItem = new HashMap<String, Object>();
			                                                 rowItem.put("ItemImage", mImageIds[index]);    // 加入序列号
			                                                 rowItem.put("ItemText", file.getName().substring(0, file.getName().length()-4));// 加入名称
			                                
			                                                 fileList.add(rowItem);
			                                                 index++;
		                                     }   
                                    	} catch(Exception e) {   
                                           Toast.makeText(this,"查找发生错误", Toast.LENGTH_SHORT).show();   
                                    	}   
                           
                        }
               
            }
			return fileList;
        }
        
		
}



